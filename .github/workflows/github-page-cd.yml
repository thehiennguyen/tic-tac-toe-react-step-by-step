# This is a workflow to build and deploy to github page branch

name: Github Page Deployment Workflow

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  pull_request:
    branches: [ master ]
    types: [closed]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build and deploy"
  build-and-deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          
      # Try NPM install
      - name: Try NPM install
        run: npm install
        
      # Try NPM run build
      - name: Try NPM run build
        run: npm run build
          
      #- name: npm install
      # You may pin to the exact commit or the version.
      # uses: Jaid/action-npm-install@9483da054882538350947c4147de4c8adbf0d597
        #uses: Jaid/action-npm-install@v1.2.4
        #with:
          # NODE_ENV setting for installing execution (affects the amount of dependencies installed, but I would recommend keeping development in any case).
          #nodeEnv: # optional, default is development
          # Can be "npm", "yarn", "pnpm" or "auto". "auto" will determine the package manager by looking into the repo's files. This is very accurate, so you normally don't want to change this.
          #packageManager: # optional, default is auto
          # If true and node_modules folder already exists, this action will be skipped assuming npm install is not required.
          #skipIfNodeModulesExists: # optional, default is false
          
      
